C UTEP Electronic Structure Lab (2020)
C
C ***************************************************************
C
       SUBROUTINE POLYX(A0,B0,DELTA,A)
C ORIGINAL VERSION BY MARK R PEDERSON (1988)
       IMPLICIT REAL*8 (A-H,O-Z)
       DIMENSION A(5,5,3,3)
       SAVE
C
C POREZAG 9/94
C CHANGE OF POLY IN SUCH A WAY THAT ONLY THOSE ARRAY ELEMENTS ARE
C SET WHICH REALLY DEPEND ON THE INPUT PARAMETERS
C
C WE WISH TO DO THE INTEGRAL:
C
C   I(N,M,A,ALPHA,B,BETA,R')
C
C   I:DXDYDZ 1/| R-R'|
C      [(X-AX)**NX (Y-AY)**NY (Z-AZ)**NZ] EXP(-ALPHA*(R-A)**2)
C      [(X-BX)**MX (Y-BY)**MY (Z-BZ)**MZ] EXP(-BETA *(R-B)**2)
C
C DEFINE:
C
C   DELTA=ALPHA+BETA
C   ARG=ALPHA*BETA*(A-B)**2/DELTA
C   C=(ALPHA*A+BETA*B)/DELTA  (VECTORS)
C   RO=R' - C                 (VECTORS)
C   AO=A  - C                 (VECTORS)
C   BO=B  - C                 (VECTORS)
C
C WITH SOME ALGEBRA:
C
C   I=(2.0*PI/DELTA)*EXP(-ARG)*
C   I(0,1):DU EXP(-DELTA*RO*RO*U*U)
C   *SUM(N,M) A(N,M,NX,MX)* (ROX**(N-1))*(U*U)**(M-1)
C   *SUM(N,M) A(N,M,NY,MY)* (ROY**(N-1))*(U*U)**(M-1)
C   *SUM(N,M) A(N,M,NZ,MZ)* (ROZ**(N-1))*(U*U)**(M-1)
C
C THIS SUBROUITINE ACCEPTS AOX AND BOX AND CALCULATES THE MATRIX A
C
       TWODELINV=0.5D0/DELTA
       A0B0=A0*B0
       A02=A0*A0
       B02=B0*B0
       ABSUM=A0+B0
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C  BLOCK FOR N,M= 0 0  (ONLY CONSTANTS)
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C  BLOCK FOR N,M= 0 1
C
       A(1,1,1,2)= -B0
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C  BLOCK FOR N,M= 0 2
C
       A(1,1,1,3)=  TWODELINV+B02
       A(1,2,1,3)= -TWODELINV
       A(2,2,1,3)= -2*B0
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C  BLOCK FOR N,M= 1 0
C
       A(1,1,2,1)= -A0
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C  BLOCK FOR N,M= 1 1
C
       A(1,1,2,2)=  TWODELINV+A0B0
       A(1,2,2,2)= -TWODELINV
       A(2,2,2,2)= -ABSUM
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C  BLOCK FOR N,M= 1 2
C
       DTMP1=TWODELINV*(ABSUM+B0)
       DTMP2=TWODELINV*3
       A(1,1,2,3)= -DTMP1-A0*B02
       A(1,2,2,3)=  DTMP1
       A(2,2,2,3)=  DTMP2+B02+2*A0B0
       A(2,3,2,3)= -DTMP2
       A(3,3,2,3)= -ABSUM-B0
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C  BLOCK FOR N,M= 2 0
C
       A(1,1,3,1)=  TWODELINV+A02
       A(1,2,3,1)= -TWODELINV
       A(2,2,3,1)= -2*A0
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C  BLOCK FOR N,M= 2 1
C
       DTMP1=TWODELINV*(ABSUM+A0)
       A(1,1,3,2)= -DTMP1-A02*B0
       A(1,2,3,2)=  DTMP1
       A(2,2,3,2)=  DTMP2+2*A0B0+A02
       A(2,3,3,2)= -DTMP2
       A(3,3,3,2)= -ABSUM-A0
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C  BLOCK FOR N,M= 2 2
C
       DTMP1= TWODELINV*(3*TWODELINV+B02+4*A0B0+A02)
       DTMP2= TWODELINV*TWODELINV*3
       DTMP3= TWODELINV*6
       A(1,1,3,3)=  DTMP1+A02*B02
       A(1,2,3,3)= -DTMP1-DTMP2
       A(1,3,3,3)=  DTMP2
       A(2,2,3,3)= -ABSUM*(DTMP3+2*A0B0)
       A(2,3,3,3)=  DTMP3*ABSUM
       A(3,3,3,3)=  DTMP3+B02+A02+4*A0B0
       A(3,4,3,3)= -DTMP3
       A(4,4,3,3)= -2*ABSUM
       RETURN
       END
